apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: stock-prices-collector-processor-sink
spec:
  selector:
    matchLabels:
      app: stock-prices-collector-processor-sink
  replicas: 2 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: stock-prices-collector-processor-sink
    spec:
      containers:
        - name: stock-prices-collector-processor-sink
          image: stock-prices-collector-processor-sink # Image that will be used to containers in the cluster
          imagePullPolicy: Never
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          env:
            - name: DYNAMO_ENDPOINT
              value: '{{ .Values.env.DYNAMO_ENDPOINT }}'
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: dynamodb-secret
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: dynamodb-secret
                  key: AWS_SECRET_ACCESS_KEY
            - name: KAFKA_BOOSTRAP_URL
              value: '{{ .Values.env.KAFKA_BOOSTRAP_URL }}'
            - name: KAFKA_SECURITY_PROTOCOL
              value: '{{ .Values.env.KAFKA_SECURITY_PROTOCOL }}'
            - name: KAFKA_SECURITY_MECHANISM
              value: '{{ .Values.env.KAFKA_SECURITY_MECHANISM }}'
            - name: KAFKA_CLUSTER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: kafka-cluster-secret
                  key: KAFKA_CLUSTER_API_KEY
            - name: KAFKA_CLUSTER_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: kafka-cluster-secret
                  key: KAFKA_CLUSTER_API_SECRET
