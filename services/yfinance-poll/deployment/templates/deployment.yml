apiVersion: batch/v1
kind: CronJob
metadata:
  name: "yfinance-poll"
  labels:
    app.kubernetes.io/name: "yfinance-poll"
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app.kubernetes.io/name: "yfinance-poll"
        spec:
          restartPolicy: OnFailure
          containers:
            - name: yfinance-poll
              image: yfinance-poll # Image that will be used to containers in the cluster
              imagePullPolicy: Never
              env:
                - name: DYNAMO_URL
                  value: '{{ .Values.env.DYNAMO_ENDPOINT }}'
                - name: KAFKA_BOOSTRAP_URL
                  value: '{{ .Values.env.KAFKA_BOOSTRAP_URL }}'
                - name: KAFKA_SECURITY_PROTOCOL
                  value: '{{ .Values.env.KAFKA_SECURITY_PROTOCOL }}'
                - name: KAFKA_SECURITY_MECHANISM
                  value: '{{ .Values.env.KAFKA_SECURITY_MECHANISM }}'
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: dynamodb-secret
                      key: AWS_ACCESS_KEY_ID
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: dynamodb-secret
                      key: AWS_SECRET_ACCESS_KEY
                - name: KAFKA_CLUSTER_API_KEY
                  valueFrom:
                    secretKeyRef:
                      name: kafka-cluster-secret
                      key: KAFKA_CLUSTER_API_KEY
                - name: KAFKA_CLUSTER_API_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: kafka-cluster-secret
                      key: KAFKA_CLUSTER_API_SECRET